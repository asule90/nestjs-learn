// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid()) @db.VarChar(255)
  email     String      @unique @db.VarChar(100)
  username  String      @unique @db.VarChar(100)
  password  String      @db.VarChar(255)
  name      String      @db.VarChar(100)
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")
  GiftRates GiftRates[]

  @@map("user")
}

enum EnumBadge {
  HOT
  NEW
  BEST_SELLER
}

model Gift {
  uuid        String      @id @default(uuid()) @db.VarChar(255)
  name        String      @db.VarChar(100)
  description String
  stock       Int
  price       Int
  reviewCount Int         @map("review_count") @default(0)
  image1      String      @map("image_1")
  badge       EnumBadge?
  rating      Decimal     @db.Decimal(2, 1) @default(0)
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")
  GiftRates   GiftRates[]

  @@map("gift")
}

model GiftRates {
  id        Int      @id @default(autoincrement())
  giftId    String   @db.VarChar(255)
  userId    String   @db.VarChar(255)
  rating    Int
  comment   String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  gift Gift @relation(fields: [giftId], references: [uuid])
  user User @relation(fields: [userId], references: [id])

  @@map("gift_rates")
}
